xruta = 'h:\sicgdata\data' + STR(YEAR(m.fecsis), 4) + '\'
CLOSE DATABASES
USE IN 1 Peco		ALIAS peco		ORDER Peco1
USE IN 2 ItePeco	ALIAS itepeco	ORDER ItePeco1
USE IN 3 ArtMae		ALIAS artmae	ORDER ArtMae1
USE IN 4 IteArt		ALIAS iteart	ORDER IteArt2
USE IN 5 KardexV	ALIAS kardex	ORDER Kardexv1
USE IN 6 StkAlmV	ALIAS stkalmv	ORDER StkAlmv1
USE IN 7 Parmae		ALIAS parma		ORDER Parmae1
USE IN 8 maepre		ALIAS maepre	ORDER maepre3
USE IN 9 CdrNec		ALIAS cuadro	ORDER Cdrnec1
*USE IN 9 &xRuta.CdrNec ALIAS cuadro	ORDER Cdrnec1

vmens01 = 'Registro de Pecosas (Kardex)'
vmens02 = 'Pecosas (Kardex) : REVISION '
vmens04 = 'Dicha Pe. Co. Sa. no fue encontrada'
vmens05 = 'No existe Pe. Co. Sa. anterior'
vmens06 = 'No existe Pe. Co. Sa. siguiente'
vmens07 = '¨ Desea Anular ‚sta Pe. Co. Sa. ?'
vmens08 = 'No hay registros para procesar'
vmens09 = 'Esta Pe. Co. Sa. ha sido anulada'
vmens10 = 'Edici¢n'
SELECT peco
GOTO BOTTOM
SCATTER BLANK MEMVAR
DO inicia
HIDE POPUP ALL
DO pantalla
DO vista
STORE .T. TO ven_accion
DO WHILE ven_accion
     ACTIVATE SCREEN
     ACTIVATE MENU mmenu
ENDDO
DO fin_opcion
RETURN
*
PROCEDURE inicia
ACTIVATE SCREEN
vtempo = ' Revisa  Busca  Anterior  Siguiente  Corrige  Ingresa           Listar  Termina '
DO logos WITH rotulo1, vtempo
DEFINE WINDOW wind_0 FROM 00, 00  ;
       TO 12, 79 TITLE vmens01  ;
       FOOTER  ;
       '[F9] Detalle : Item'  ;
       DOUBLE COLOR SCHEME 10
DEFINE WINDOW wind_1 FROM 13, 00  ;
       TO 23, 79 TITLE  ;
       'Detalle: Inventario'  ;
       DOUBLE COLOR SCHEME 10
DEFINE WINDOW wind_2 FROM 00, 00  ;
       TO 23, 79 TITLE vmens02  ;
       DOUBLE COLOR SCHEME 10
DEFINE MENU mmenu COLOR SCHEME 3
DEFINE PAD revis OF mmenu PROMPT  ;
       '\<Revisa' AT 24, 00
DEFINE PAD busca OF mmenu PROMPT  ;
       '\<Busca' AT 24, 08
DEFINE PAD anter OF mmenu PROMPT  ;
       '\<Anterior' AT 24, 15
DEFINE PAD proxi OF mmenu PROMPT  ;
       '\<Siguiente' AT 24, 25
DEFINE PAD corri OF mmenu PROMPT  ;
       '\<Corrige' AT 24, 36
DEFINE PAD ingre OF mmenu PROMPT  ;
       '\<Ingresa' AT 24, 45
DEFINE PAD elimi OF mmenu PROMPT  ;
       'A\<nula  ' AT 24, 54
DEFINE PAD lista OF mmenu PROMPT  ;
       '\<Listar ' AT 24, 63
DEFINE PAD termi OF mmenu PROMPT  ;
       '\<Termina' AT 24, 71
ON SELECTION PAD revis OF mmenu DO revis
ON SELECTION PAD busca OF mmenu DO busca
ON SELECTION PAD anter OF mmenu DO anter
ON SELECTION PAD proxi OF mmenu DO proxi
ON SELECTION PAD corri OF mmenu DO corri
ON SELECTION PAD ingre OF mmenu DO ingre
ON SELECTION PAD elimi OF mmenu DO Anula
ON SELECTION PAD lista OF mmenu DO lista
ON SELECTION PAD termi OF mmenu DO termi
RETURN
*
PROCEDURE pantalla
ACTIVATE WINDOW wind_0
CLEAR
@ 0, 59 SAY 'Estado :'
@ 1, 2 SAY '         Pecosa :'
@ 1, 59 SAY ' Fecha :'
@ 2, 2 SAY ' Tipo de Control :'
@ 3, 2 SAY '     Dependencia :'
@ 4, 2 SAY '     Atentamente :'
@ 5, 2 SAY ' Doc. referencia :'
@ 6, 2 SAY ' Num. Referencia :'
@ 6, 50 SAY 'Fecha Ref. :'
@ 7, 2 SAY '      Cad. Func. :'
@ 8, 2 SAY '    Fte. Financ. :'
@ 9, 2 SAY '    Total Pecosa :'
@ 10, 2 SAY '       Observac. :'
RETURN
*
PROCEDURE vista
SELECT peco
ON KEY LABEL F4 DO Imprimir
ON KEY LABEL F9 DO VISTA_DET
IF EOF()
     DO pantalla
     RETURN
ENDIF
ACTIVATE WINDOW wind_0
SCATTER MEMVAR
@ 0, 68 SAY val_est()
@ 1, 22 SAY m.periodo + '.' +  ;
  m.numpec
@ 1, 68 SAY m.fecpec
@ 2, 22 SAY val_para(m.tipkar, ;
  'TIPKAR','D',22,50)
@ 3, 22 SAY val_para(m.coddep, ;
  'CODDEP','D',22,50)
@ 4, 22 SAY m.atte
@ 5, 22 SAY val_para(m.tipdoc, ;
  'TIPDOC','D',22,20)
@ 6, 22 SAY m.numref
@ 6, 65 SAY m.fecref
@ 7, 22 SAY m.codcad
@ 8, 22 SAY m.codfte
@ 9, 22 SAY m.totpec
@ 10, 22 SAY m.observa
DO vista_hijo
IF  .NOT. vflag $ 'J*'
     DO subopc
ENDIF
RETURN
*
PROCEDURE vista_hijo
HIDE POPUP ALL
SELECT itepeco
GOTO TOP
SEEK m.periodo + m.numpec
IF FOUND()
     BROWSE NOOPTIMIZE FIELDS  ;
            item :H = 'ITEM',  ;
            codart :H = 'C¢digo',  ;
            desart :H =  ;
            'Descripci¢n',  ;
            cantidad :H =  ;
            'Cantidad', fraccion  ;
            :H = 'Fracci¢n',  ;
            valcom :H = 'Total'  ;
            NOMENU NOAPPEND  ;
            NODELETE NOCLEAR  ;
            WINDOW wind_1 KEY  ;
            m.periodo + m.numpec  ;
            TIMEOUT 0.0001   ;
            NOREFRESH
ELSE
     ACTIVATE WINDOW wind_1
     CLEAR
     @ 4, 25 SAY  ;
       'No hay Detalles de este Inventario'
     ACTIVATE WINDOW wind_0
ENDIF
SELECT peco
RETURN
*
PROCEDURE vista_det
SELECT itepeco
vtempo = '[ESC] Terminar'
ON KEY LABEL F9
HIDE POPUP ALL
GOTO TOP
SEEK m.periodo + m.numpec
IF FOUND()
     BROWSE NOOPTIMIZE FIELDS  ;
            item :H = 'ITEM',  ;
            codart :H = 'C¢digo',  ;
            desart :H =  ;
            'Descripci¢n',  ;
            cantidad :H =  ;
            'Cantidad', fraccion  ;
            :H = 'Fracci¢n',  ;
            valcom :H = 'Total'  ;
            NOMENU NOAPPEND  ;
            NOEDIT NODELETE  ;
            NOCLEAR WINDOW wind_1  ;
            KEY m.periodo +  ;
            m.numpec TITLE vtempo  ;
            NOREFRESH
ELSE
     ACTIVATE WINDOW wind_1
     CLEAR
     @ 4, 25 SAY  ;
       'No hay Detalles de este Ingreso'
ENDIF
ON KEY LABEL F9 DO VISTA_DET
SHOW MENU mmenu
SELECT peco
DO vista
RETURN
*
PROCEDURE revis
ON KEY LABEL F4
ON KEY LABEL F9
SELECT peco
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
vtemp = RECNO()
HIDE MENU mmenu
ACTIVATE SCREEN
vtempo = '°°°°°°°°°°°Presione ®F10¯ para seleccionar  o  ®Esc¯ para cancelar°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
SET RELATION TO periodo + numpec INTO;
itepeco
SET SKIP TO itepeco
vtemp = RECNO()
HIDE MENU mmenu
ACTIVATE SCREEN
ON KEY LABEL f10 KEYBOARD CHR(23)
BROWSE FIELDS periodo :H =  ;
       'Periodo', numpec :H =  ;
       'Pe.Co.Sa.', itepeco.item  ;
       :H = 'ITEM',  ;
       itepeco.codart :H =  ;
       'C¢digo', itepeco.desart  ;
       :H = 'Descripci¢n',  ;
       itepeco.cantidad :H =  ;
       'Cantidad',  ;
       itepeco.fraccion :H =  ;
       'Fracci¢n', itepeco.valcom  ;
       :H = 'Total' NOMENU  ;
       NOAPPEND NOEDIT NODELETE  ;
       WINDOW wind_2
vtempo = '°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
IF LASTKEY() = 27
     GOTO vtemp
ENDIF
SHOW MENU mmenu
ON KEY LABEL f10
SELECT peco
SET RELATION TO
DO vista
RETURN
*
PROCEDURE busca
ON KEY LABEL F4
ON KEY LABEL F9
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
vtemp = RECNO()
vperiodo = RIGHT(DTOC(m.fecsis),  ;
           2)
vnum_pec = '    '
ACTIVATE WINDOW standby
@ 1, 01 SAY  ;
  'Ingrese N£mero Pecosa : ' GET  ;
  vperiodo PICTURE '!!'
@ 1, 26 SAY '-' GET vnum_pec  ;
  PICTURE '!!!!' VALID vbusca()
READ
DEACTIVATE WINDOW standby
IF EMPTY(vnum_pec) .OR. LASTKEY() =  ;
   27
     RETURN
ELSE
     SEEK vperiodo + vnum_pec
     IF  .NOT. FOUND()
          DO standby WITH vmens04
          GOTO vtemp
     ELSE
          DO vista
     ENDIF
ENDIF
RETURN
*
FUNCTION vbusca
vnum_pec = PADL(ALLTRIM(vnum_pec),  ;
           4, '0')
RETURN .T.
*
PROCEDURE anter
SELECT peco
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
IF  .NOT. BOF()
     SKIP -1
ENDIF
IF BOF()
     GOTO TOP
     DO standby WITH vmens05
ELSE
     DO vista
ENDIF
RETURN
*
PROCEDURE proxi
SELECT peco
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
IF  .NOT. EOF()
     SKIP
ENDIF
IF EOF()
     DO standby WITH vmens06
     GOTO BOTTOM
ELSE
     DO vista
ENDIF
RETURN
*
PROCEDURE corri
ON KEY LABEL F4
ON KEY LABEL F9
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
SELECT kardex
GOTO TOP
IF estado = '20'
     DO standby WITH  ;
        'El periodo ya esta cerrado no se puede hacer modificaciones'
     SELECT ordped
     DO vista
     RETURN
ENDIF
SELECT peco
SCATTER MEMVAR
DO pantalla
@ 0, 68 GET m.estado DISABLE
@ 1, 22 GET m.periodo DISABLE
@ 1, 25 GET m.numpec DISABLE
@ 1, 68 GET m.fecpec
@ 2, 22 GET m.tipkar WHEN .F.
@ 2, 22 SAY val_para(m.tipkar, ;
  'TIPKAR',' ',22,50)
@ 3, 22 GET m.coddep VALID  ;
  val_para(m.coddep,'CODDEP',' ', ;
  22,50)
@ 4, 22 GET m.atte
@ 5, 22 GET m.tipdoc VALID  ;
  val_para(m.tipdoc,'TIPDOC',' ', ;
  22,20)
@ 6, 22 GET m.numref
@ 6, 65 GET m.fecref
@ 7, 22 GET m.codcad VALID  ;
  val_codcad(m.codcad,m.periodo, ;
  ' ',22,30)
@ 8, 22 GET m.codfte VALID  ;
  val_para(m.codfte,'CODFTE',' ', ;
  22,30)
@ 9, 22 GET m.totpec
@ 10, 22 GET m.observa PICTURE  ;
  '@S56'
READ VALID val_read()
IF LASTKEY() <> 27
     ok = trabaja_hi()
     IF ok .AND. LASTKEY() <> 27
          SELECT peco
          IF f_lock(1)
               m.tuser = 'C'
               m.usercr = vuser_id
               m.dusercr = DATE()
               m.husercr = TIME()
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH  ;
        'Proceso cancelado'
ENDIF
UNLOCK ALL
SELECT peco
DO vista
RETURN
*
PROCEDURE ingre
*--------------
ON KEY LABEL F4
ON KEY LABEL F9
SELECT stkalmv
GOTO TOP
IF EOF()
     DO standby WITH 'No existe Inventario Inicial en el sistema. por favor revise'
     SELECT peco
     DO vista
     RETURN
ENDIF
SELECT kardex
GOTO TOP
IF estado = '20'
     DO standby WITH 'El periodo ya esta cerrado no se puede hacer modificaciones'
     SELECT ordped
     DO vista
     RETURN
ENDIF
SELECT peco
nreg = IIF( .NOT. EOF(), RECNO(), - 1)
DO pantalla
SCATTER BLANK MEMVAR
m.estado = '00'
m.periodo = RIGHT(STR(YEAR(m.fecsis), 4), 2)
m.fecpec = m.fecsis
m.fecref = m.fecsis
SELECT parma
SEEK 'CORRELPECNEW'
IF FOUND()
     m.numpec = PADL(ALLTRIM(STR(nument + 1)), 4, '0')
     IF SEEK(m.periodo + m.numpec, 'Peco')
          DO standby WITH 'El Correlativo Generado ya Existe.'
          SELECT peco
          DO vista
          RETURN
     ENDIF
ELSE
     DO standby WITH 'El Parametro de Correlativos no existe. por favor consulte al area de Sistemas'
     DO vista
     RETURN
ENDIF
SELECT peco
@ 0, 68 GET m.estado DISABLE
@ 1, 22 GET m.periodo DISABLE
@ 1, 25 GET m.numpec DISABLE
@ 1, 68 GET m.fecpec
@ 2, 22 GET m.tipkar VALID val_para(m.tipkar,'TIPKAR',' ',22,50)
@ 3, 22 GET m.coddep VALID val_para(m.coddep,'CODDEP',' ',22,50) .AND. valatte()
@ 4, 22 GET m.atte
@ 5, 22 GET m.tipdoc VALID val_para(m.tipdoc,'TIPDOC',' ',22,20)
@ 6, 22 GET m.numref
@ 6, 65 GET m.fecref
@ 7, 22 GET m.codcad VALID val_codcad(m.codcad,m.periodo, ' ',22,30)
@ 8, 22 GET m.codfte VALID val_para(m.codfte,'CODFTE',' ', 22,30)
@ 9, 22 GET m.totpec
@ 10, 22 GET m.observa PICTURE '@S56'
READ VALID val_read()
IF LASTKEY() <> 27
     ok = trabaja_hi()
     IF ok .AND. LASTKEY() <> 27
          SELECT peco
          IF f_appd()
               m.tuser = 'I'
               m.user = vuser_id
               m.duser = DATE()
               m.huser = TIME()
               GATHER MEMVAR
               SELECT parma
               SEEK 'CORRELPECNEW'
               IF FOUND()
                    IF f_lock(1)
                         REPLACE nument WITH nument + 1
                    ENDIF
               ENDIF
          ENDIF
     ELSE
          IF nreg <> -1
               GOTO nreg
          ENDIF
          SELECT itepeco
          IF SEEK(m.periodo + m.numpec)
               DELETE WHILE periodo = m.periodo .AND. numpec = m.numpec
          ENDIF
          SELECT kardex
          SET ORDER TO KardexV2
          DO WHILE SEEK(m.periodo+ 'PEC'+m.numpec)
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DELETE NEXT 1
               DO recalcula WITH cperiodo, ctipkar, ccodart, ccorrel
          ENDDO
          SET ORDER TO KardexV1
          DO standby WITH 'Proceso cancelado'
     ENDIF
ELSE
     IF nreg <> -1
          GOTO nreg
     ENDIF
     DO standby WITH  ;
        'Proceso cancelado'
ENDIF
UNLOCK ALL
SELECT peco
DO vista
RETURN
*
FUNCTION trabaja_hi
*------------------
vsun = .T.
ACTIVATE SCREEN
HIDE MENU mmenu
vtempo = '°°°°°F2->Edita°°°°°°°°°F5->Agregar°°°°°°°°°F8->Eliminar°°°°°°°°F10->Terminar°°°°'
DO logos WITH rotulo1, vtempo
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_item
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
SELECT itepeco
SET ORDER TO itePeco1
SEEK m.periodo + m.numpec
IF  .NOT. FOUND()
     DO agrega_ite
ENDIF
BROWSE NOOPTIMIZE FIELDS ;
		item   :H = 'Item',        codart  :H = 'Codigo', ;
		desart :H = 'Descripci¢n', menudeo :H = 'Mn.', ;
		unidad :H =  ;
       'Unidad', unifrac :H =  ;
       'U.fracc.', cantidad :H =  ;
       'Cantidad', fraccion :H =  ;
       'Fraccion', valcom :H =  ;
       'Total' NOMENU NOAPPEND  ;
       NOEDIT NODELETE NOCLEAR  ;
       WINDOW wind_1 KEY  ;
       m.periodo + m.numpec WHEN  ;
       .F.
m.totpec = 0
SEEK m.periodo + m.numpec
IF FOUND()
     SCAN WHILE periodo + numpec = m.periodo + m.numpec
          m.totpec = m.totpec + valcom
     ENDSCAN
ENDIF
IF LASTKEY() <> 27
     vsun = .T.
ELSE
     vsun = .F.
ENDIF
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
ACTIVATE SCREEN
SHOW MENU mmenu
vtempo = '°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
SELECT peco
RETURN vsun

*
PROCEDURE agrega_ite
*-------------------
PRIVATE m.tuser, m.user, m.huser, m.duser, calias
calias = ALIAS()
SELECT stkalmv
SET FILTER TO tipkar = m.tipkar AND salfrac <> 0
GOTO TOP
IF EOF()
     DO standby WITH 'No hay existencias de este tipo de kardex'
     SET FILTER TO
     SELECT (calias)
     RETURN
ELSE
     SET FILTER TO
     SELECT (calias)
ENDIF
lcant = .F.
lfrac = .F.
DEFINE WINDOW wind_3 FROM 04, 00 TO 23, 75 TITLE 'Adici¢n de Articulos' DOUBLE COLOR SCHEME 10
ACTIVATE WINDOW wind_3
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
SELECT itepeco
IF SEEK(m.periodo + m.numpec)
   SCAN WHILE periodo + numpec = m.periodo + m.numpec
      m.item=item
   ENDSCAN
   m.item = PADL(ALLTRIM(STR(VAL(m.item) + 1)), 4, '0')
ELSE
     m.item = '0001'
ENDIF
m.codart = SPACE(15)
m.desart = SPACE(60)
m.menudeo = SPACE(1)
m.unidad = SPACE(10)
m.unifrac = SPACE(10)
m.cantidad = 0
m.fraccion = 0
m.totcan = 0
m.preuni = 0
m.igv = 0
m.valuni = 0
m.valunifr = 0
m.valcom = 0
m.precom = 0
m.tuser = 'I'
m.user = vuser_id
m.huser = TIME()
m.duser = DATE()
@ 0, 01 SAY '             Item: ' + m.item
@ 1, 01 SAY '      Num. Pecosa: ' + m.periodo + '.' + m.numpec
@ 2, 01 SAY '    Cod. Art¡culo:' GET m.codart VALID art_alm(m.codart)		&& AND vcodlab()
@ 3, 1 SAY '            Grupo: '
@ 4, 01 SAY '   Desc. Art¡culo:' GET m.desart   FUNCTION 'S40' WHEN .F.
@ 5, 01 SAY '         Menudeo?:' GET m.menudeo  PICTURE '@M S,N, ' VALID val_lote(m.codart)
@ 6, 01 SAY '           Unidad:' GET m.unidad   WHEN .F.
@ 7, 01 SAY '  Unidad Fraccion:' GET m.unifrac  WHEN .F.
@ 6, 35 SAY '         Cantidad:' GET m.cantidad PICTURE '99,999' VALID val_can() .AND. val_pre(m.codart) WHEN lcant
@ 7, 35 SAY '         Fraccion:' GET m.fraccion PICTURE '99,999.999' VALID val_can() .AND. val_pre(m.codart) WHEN lfrac
@ 8, 35 SAY '   Total Cantidad:' GET m.totcan   PICTURE '99,999.999' WHEN .F.
@ 10, 01 SAY '    Precio Compra:' GET m.precom  PICTURE '999,999.9999' WHEN .F.
@ 11, 01 SAY '  Precio Unitario:' GET m.preuni  PICTURE '999,999.9999' WHEN .F.
@ 12, 01 SAY '          I.G.V. :' GET m.igv PICTURE '999,999.9999' WHEN .F.
@ 10, 35 SAY '            Total:' GET m.valcom PICTURE '999,999.9999' WHEN .F.
@ 11, 35 SAY '   Valor Unitario:' GET m.valuni PICTURE '999,999.9999' WHEN .F.
@ 12, 35 SAY ' Val. Uni. Fracc.:' GET m.valunifr PICTURE '999,999.9999' WHEN .F.
READ VALID val_read() .AND. valing()
IF LASTKEY() <> 27
     ak = actkar('PEC',m.numpec,m.fecpec)
     IF ak
          IF f_appd()
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH 'Cancela Informacion'
ENDIF
DEACTIVATE WINDOW wind_3
RELEASE WINDOW wind_3
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_item
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
RETURN
*
FUNCTION vcodlab
xlab = 'B' + LEFT(m.codart, 6)
= val_fun('ArtMae',xlab,'Descri', ;
  xlab,1,3,20,'Descri')
RETURN .T.
*
FUNCTION valing
PRIVATE mret
mret = .T.
IF LASTKEY() <> 27
     DO CASE
          CASE m.totcan = 0
               DO standby WITH  ;
                  'La cantidad Ingrasada no debe Ser 0'
               mret = .F.
          CASE m.precom = 0
               DO standby WITH  ;
                  'El Precio de compra Ingresado no debe Ser 0'
               mret = .F.
     ENDCASE
ENDIF
RETURN mret
*
PROCEDURE val_lote
*-----------------
PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     IF menudeo = 'S'
          IF m.menudeo = 'S'
               m.cantidad = 1
               lcant = .F.
               lfrac = .T.
          ELSE
               m.fraccion = fraccion
               lcant = .T.
               lfrac = .F.
          ENDIF
     ELSE
          IF m.menudeo = 'S'
               m.menudeo = 'N'
          ENDIF
          m.fraccion = fraccion
          lcant = .T.
          lfrac = .F.
     ENDIF
ELSE
     DO standby WITH 'Error en catalogo de Articulos'
ENDIF
SHOW GET m.cantidad
SHOW GET m.fraccion
SET ORDER TO (cord)
SELECT (cali)
RETURN


PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     IF lote = 'S'
          IF m.lote = 'S'
               m.fraccion = fraccion
               lcant = .T.
               lfrac = .F.
          ELSE
               m.cantidad = 1
               lcant = .F.
               lfrac = .T.
          ENDIF
     ELSE
          IF m.lote = 'S'
               m.lote = 'N'
          ENDIF
          m.fraccion = 1
          lcant = .T.
          lfrac = .F.
     ENDIF
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SHOW GET m.cantidad
SHOW GET m.fraccion
SET ORDER TO (cord)
SELECT (cali)
RETURN
*
FUNCTION val_can
PRIVATE mret
mret = .T.
m.totcan = m.fraccion *  ;
           m.cantidad
IF m.totcan > stkalmv.salfrac
     DO standby WITH  ;
        'La Cantidad Ingresada esta Excediendo al Stock. Revise'
     mret = .F.
ENDIF
SHOW GET m.totcan
RETURN mret
*
PROCEDURE val_pre
PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     m.valunifr = m.valuni /  ;
                  iteart.fraccion
     m.valcom = m.valunifr *  ;
                m.totcan
     m.precom = (m.preuni /  ;
                iteart.fraccion) *  ;
                m.totcan
     SHOW GET m.valunifr
     SHOW GET m.valcom
     SHOW GET m.precom
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SET ORDER TO (cord)
SELECT (cali)
RETURN
m.pretot = m.prexuni * m.cantot
SHOW GET m.pretot
RETURN
*
PROCEDURE edita_item
PRIVATE m.tuser, m.usercr,  ;
        m.husercr, m.dusercr
lcant = .F.
lfrac = .F.
DEFINE WINDOW wind_3 FROM 04, 00  ;
       TO 23, 75 TITLE  ;
       'Edici¢n de Articulos'  ;
       DOUBLE COLOR SCHEME 10
ACTIVATE WINDOW wind_3
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
SELECT itepeco
SCATTER MEMVAR
m.tuser = 'C'
m.usercr = vuser_id
m.husercr = TIME()
m.dusercr = DATE()
@ 0, 01 SAY '             Item: ' +  ;
  m.item
@ 1, 01 SAY '      Num. Pecosa: ' +  ;
  m.periodo + '.' + m.numpec
@ 2, 01 SAY '    Cod. Art¡culo:'  ;
  GET m.codart WHEN vcodlab()  ;
  .AND. .F.
@ 3, 1 SAY '            Grupo: '
@ 4, 01 SAY '   Desc. Art¡culo:'  ;
  GET m.desart FUNCTION 'S40'  ;
  WHEN .F.
@ 5, 01 SAY ' Fraccionamiento?:'  ;
  GET m.menudeo PICTURE '@M S,N'  ;
  VALID val_lote(m.codart)
@ 6, 01 SAY '           Unidad:'  ;
  GET m.unidad WHEN .F.
@ 7, 01 SAY '  Unidad Fraccion:'  ;
  GET m.unifrac WHEN .F.
@ 6, 35 SAY '         Cantidad:'  ;
  GET m.cantidad PICTURE '99,999'  ;
  VALID val_can() .AND.  ;
  val_pre(m.codart) WHEN lcant
@ 7, 35 SAY '         Fraccion:'  ;
  GET m.fraccion PICTURE  ;
  '99,999.999' VALID val_can()  ;
  .AND. val_pre(m.codart) WHEN  ;
  lfrac
@ 8, 35 SAY '   Total Cantidad:'  ;
  GET m.totcan PICTURE  ;
  '99,999.999' WHEN .F.
@ 10, 01 SAY '    Precio Compra:'  ;
  GET m.precom PICTURE  ;
  '999,999.9999' WHEN .F.
@ 11, 01 SAY '  Precio Unitario:'  ;
  GET m.preuni PICTURE  ;
  '999,999.9999' WHEN .F.
@ 12, 01 SAY '          I.G.V. :'  ;
  GET m.igv PICTURE  ;
  '999,999.9999' WHEN .F.
@ 10, 35 SAY '     Valor Compra:'  ;
  GET m.valcom PICTURE  ;
  '999,999.9999' WHEN .F.
@ 11, 35 SAY '   Valor Unitario:'  ;
  GET m.valuni PICTURE  ;
  '999,999.9999' WHEN .F.
@ 12, 35 SAY ' Val. Unit.Fracc.:'  ;
  GET m.valunifr PICTURE  ;
  '999,999.9999' WHEN .F.
READ VALID val_read()
IF LASTKEY() <> 27
     ak = actkar('PEC',numpec, ;
          m.fecpec)
     IF ak
          IF f_lock(1)
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH  ;
        'Cancela Informacion'
ENDIF
DEACTIVATE WINDOW wind_3
RELEASE WINDOW wind_3
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_item
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
RETURN
*
PROCEDURE elimi_item
SELECT itepeco
IF yesno( ;
   'Estas seguro de Eliminar este Item' ;
   )
     SELECT kardex
     SET ORDER TO KardexV2
     IF SEEK(itepeco.periodo +  ;
        'PEC' + itepeco.numpec +  ;
        itepeco.item +  ;
        itepeco.codart)
          IF RLOCK()
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DELETE NEXT 1
               DO recalcula WITH  ;
                  cperiodo,  ;
                  ctipkar,  ;
                  ccodart,  ;
                  ccorrel
          ENDIF
     ENDIF
     SELECT itepeco
     IF RLOCK()
          DELETE NEXT 1
     ELSE
          DO standby WITH  ;
             'No puede eliminar este Item.'
     ENDIF
ENDIF
UNLOCK
RETURN
*
PROCEDURE anula
PRIVATE nreg, lanula
lanula = .F.
IF yesno( ;
   'Esta seguro de Anular este Documento' ;
   )
     lanula = .T.
ENDIF
IF lanula
     DO CASE
          CASE estado = '99'
               DO standby WITH  ;
                  'El Docuemnto ya esta Anulado'
               lanula = .F.
          OTHERWISE
               lanula = .T.
     ENDCASE
ENDIF
IF lanula
     SELECT itepeco
     IF SEEK(m.periodo +  ;
        m.numpec)
          SCAN WHILE periodo +  ;
               numpec = m.periodo +  ;
               m.numpec
               REPLACE estado  ;
                       WITH '99'
          ENDSCAN
     ENDIF
     SELECT kardex
     SET ORDER TO KardexV2
     IF SEEK(m.periodo + 'PEC' +  ;
        m.numpec)
          SCAN WHILE periodo +  ;
               tipdoc + numdoc =  ;
               m.periodo + 'PEC' +  ;
               m.numpec
               REPLACE estado  ;
                       WITH '99'
               nreg = RECNO()
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DO recalcula WITH  ;
                  cperiodo,  ;
                  ctipkar,  ;
                  ccodart,  ;
                  ccorrel
               GOTO nreg
          ENDSCAN
     ENDIF
     SET ORDER TO KardexV1
     SELECT peco
     IF SEEK(m.periodo +  ;
        m.numpec)
          REPLACE estado WITH  ;
                  '99'
     ENDIF
ENDIF
SELECT peco
DO vista
RETURN
*
PROCEDURE imprimir
*-----------------
ON KEY LABEL F4
ON KEY LABEL F9
SELECT peco
SCATTER MEMVAR
vdbf = SYS(3) + '.Dbf'
COPY TO (vdbf) STRUCTURE
USE IN 0 (vdbf) ALIAS xpeco
SELECT xpeco
APPEND BLANK
GATHER MEMVAR
SET RELATION TO periodo + numpec INTO;
itepeco ADDITIVE
SET SKIP TO itepeco
DO reporte WITH 2, 'Peco', 'Pe. Co. Sa.', 2, .F., .T.
USE IN xpeco
ERASE (vdbf)
SELECT peco
DO vista
RETURN
*
PROCEDURE lista
*--------------
ctipkar = SPACE(1)
cmes = PADL(MONTH(fecsis), 2,'0')
canio = STR(YEAR(fecsis), 4)
nrepo = 2
DEFINE WINDOW wlista FROM 3, 15 TO 20, 70 FLOAT TITLE 'Reporte de Existencias a la Fecha' DOUBLE COLOR SCHEME 5
ACTIVATE WINDOW wlista
@ 01, 01 SAY  ;
  ' Tipo de Existencias: ' GET  ;
  m.tipkar VALID  ;
  val_para(m.tipkar,'TIPKAR',' ', ;
  22,50)
@ 03, 01 SAY '     Mes: ' GET  ;
  cmes VALID val_para(cmes, ;
  'FECMES',' ',22,50)
@ 05, 01 SAY '     A¤o: ' GET  ;
  canio
@ 07, 01 SAY ' Reporte: ' GET  ;
  nrepo FUNCTION  ;
  '^ Detallado;Res. Items'
@ 15, 10 GET okcancel DEFAULT 1  ;
  SIZE 1, 11, 8 FUNCTION  ;
  '*TH \!\<OK;\?\<Cancela'
READ CYCLE
DEACTIVATE WINDOW wlista
RELEASE WINDOW wlista
IF LASTKEY() <> 27
   SELECT peco
   SET FILTER TO MONTH(fecpec)=VAL(cmes) AND YEAR(fecpec)=VAL(canio) AND tipkar=m.tipkar
   GOTO TOP
   SET RELATION TO periodo+numpec INTO itepeco ADDITIVE
   SET SKIP TO itepeco
   IF nrepo = 1
      DO reporte WITH 2,'Peco','Pe. Co. Sa.', 2,.F., .T.
    ELSE
      DO reporte WITH 2,'ResPeco','Pe. Co. Sa.',2,.F.,.T.
   ENDIF
   SELECT peco
   SET RELATION TO
   SET FILTER TO
ENDIF
SELECT peco
DO vista
RETURN
*
PROCEDURE valatte
*----------------
SELECT cuadro
SEEK m.periodo + m.coddep
IF FOUND()
     m.atte = cuadro.atte
ELSE
     m.atte = 'No Existe Solicitante..,Revise'
ENDIF
SELECT peco
RETURN
*
FUNCTION val_est
PRIVATE mret
DO CASE
     CASE m.estado = '00'
          mret = 'Emitido  '
     CASE m.estado = '99'
          mret = 'Anulado  '
ENDCASE
RETURN mret
*
PROCEDURE termi
ven_accion = .F.
DEACTIVATE MENU
RETURN
*
PROCEDURE fin_opcion
CLOSE DATABASES
ON KEY LABEL F7
RELEASE WINDOW wind_0
RELEASE WINDOW wind_1
RELEASE WINDOW wind_2
RELEASE MENU mmenu
RESTORE SCREEN FROM principal
RETURN
*
PROCEDURE subopc
PRIVATE calias
calias = ALIAS()
USE IN 0 IteUsuOp ORDER IteUsuOp2
SET SKIP OF PAD revis OF mmenu;
 .NOT. SEEK(vusucla + '0025', 'IteUsuOp')
SET SKIP OF PAD busca OF mmenu;
 .NOT. SEEK(vusucla + '0026', 'IteUsuOp')
SET SKIP OF PAD anter OF mmenu;
 .NOT. SEEK(vusucla + '0027', 'IteUsuOp')
SET SKIP OF PAD proxi OF mmenu;
 .NOT. SEEK(vusucla + '0028', 'IteUsuOp')
SET SKIP OF PAD corri OF mmenu;
 .NOT. SEEK(vusucla + '0029', 'IteUsuOp')
SET SKIP OF PAD ingre OF mmenu;
 .NOT. SEEK(vusucla + '0030', 'IteUsuOp')
SET SKIP OF PAD anula OF mmenu;
 .NOT. SEEK(vusucla + '0031', 'IteUsuOp')
SET SKIP OF PAD lista OF mmenu;
 .NOT. SEEK(vusucla + '0032', 'IteUsuOp')
USE IN iteusuop
SELECT (calias)
RETURN
*
