xruta = 'h:\sicgdata\data' + STR(YEAR(m.fecsis), 4) + '\'
CLOSE DATABASES
USE IN 1 GuiInt  ALIAS guiint  ORDER GuiInt1
USE IN 2 IteGI   ALIAS itegi   ORDER IteGI1
USE IN 3 ArtMae  ALIAS artmae  ORDER ArtMae1
USE IN 4 IteArt  ALIAS iteart  ORDER IteArt2
USE IN 5 KardexV ALIAS kardex  ORDER Kardexv1
USE IN 6 StkAlmV ALIAS stkalmv ORDER StkAlmv1
USE IN 7 Parmae  ALIAS parma   ORDER Parmae1
USE Promae  IN 8  ORDER TAG ProMae1 ALIAS Promae
*USE &xRuta.Promae  IN 8  ORDER TAG ProMae1 ALIAS Promae
USE IN 9 maepre  ALIAS maepre  ORDER maepre3

vmens01 = 'Registro de Guia de Internamiento'
vmens02 = 'Guia de Internamiento : REVISION '
vmens04 = 'Dicha Guia no fue encontrado'
vmens05 = 'No existe Guia de Internamiento anterior'
vmens06 = 'No existe Guia de Internamiento siguiente'
vmens07 = '¨ Desea Anular ‚sta Guia de Internamientro ?'
vmens08 = 'No hay registros para procesar'
vmens09 = 'Esta Guia de Internamiento ha sido anulada'
vmens10 = 'Edici¢n'
SELECT guiint
GOTO BOTTOM
SCATTER BLANK MEMVAR
DO inicia
HIDE POPUP ALL
DO pantalla
DO vista
STORE .T. TO ven_accion
DO WHILE ven_accion
     ACTIVATE SCREEN
     ACTIVATE MENU mmenu
ENDDO
DO fin_opcion
RETURN
*
PROCEDURE inicia
ACTIVATE SCREEN
vtempo = ' Revisa  Busca  Anterior  Siguiente  Corrige  Ingresa           Listar  Termina '
DO logos WITH rotulo1, vtempo
DEFINE WINDOW wind_0 FROM 00, 00  ;
       TO 12, 79 TITLE vmens01  ;
       FOOTER  ;
       '[F9] Detalle : Item'  ;
       DOUBLE COLOR SCHEME 10
DEFINE WINDOW wind_1 FROM 13, 00  ;
       TO 23, 79 TITLE  ;
       'Detalle: Guia de Internamiento'  ;
       DOUBLE COLOR SCHEME 10
DEFINE WINDOW wind_2 FROM 00, 00  ;
       TO 23, 79 TITLE vmens02  ;
       DOUBLE COLOR SCHEME 10
DEFINE MENU mmenu COLOR SCHEME 3
DEFINE PAD revis OF mmenu PROMPT  ;
       '\<Revisa' AT 24, 00
DEFINE PAD busca OF mmenu PROMPT  ;
       '\<Busca' AT 24, 08
DEFINE PAD anter OF mmenu PROMPT  ;
       '\<Anterior' AT 24, 15
DEFINE PAD proxi OF mmenu PROMPT  ;
       '\<Siguiente' AT 24, 25
DEFINE PAD corri OF mmenu PROMPT  ;
       '\<Corrige' AT 24, 36
DEFINE PAD ingre OF mmenu PROMPT  ;
       '\<Ingresa' AT 24, 45
DEFINE PAD elimi OF mmenu PROMPT  ;
       'A\<nula  ' AT 24, 54
DEFINE PAD lista OF mmenu PROMPT  ;
       '\<Listar ' AT 24, 63
DEFINE PAD termi OF mmenu PROMPT  ;
       '\<Termina' AT 24, 71
ON SELECTION PAD revis OF mmenu DO revis
ON SELECTION PAD busca OF mmenu DO busca
ON SELECTION PAD anter OF mmenu DO anter
ON SELECTION PAD proxi OF mmenu DO proxi
ON SELECTION PAD corri OF mmenu DO corri
ON SELECTION PAD ingre OF mmenu DO ingre
ON SELECTION PAD elimi OF mmenu DO Anula
ON SELECTION PAD lista OF mmenu DO lista
ON SELECTION PAD termi OF mmenu DO termi
RETURN
*
PROCEDURE pantalla
ACTIVATE WINDOW wind_0
CLEAR
@ 0, 59 SAY 'Estado :'
@ 1, 2 SAY ' Guia de Intern. :'
@ 1, 50 SAY ' Fecha G/I :'
@ 2, 2 SAY ' Doc. referencia :'
@ 3, 2 SAY ' Num. Referencia :'
@ 3, 50 SAY 'Fecha Ref. :'
@ 4, 2 SAY '       Proveedor :'
@ 5, 2 SAY 'Cadena Funcional :'
@ 6, 2 SAY '  Fte Financiam. :'
@ 7, 2 SAY '         Destino :'
@ 8, 2 SAY '   Observaciones :'
@ 9, 2 SAY '           Total :'
@ 10, 2 SAY ' Graba IGV (S/N) :'
RETURN
*
PROCEDURE vista
SELECT guiint
ON KEY LABEL F9 DO VISTA_DET
IF EOF()
     DO pantalla
     RETURN
ENDIF
ACTIVATE WINDOW wind_0
SCATTER MEMVAR
@ 0, 68 SAY val_est()
@ 1, 22 SAY m.periodo
@ 1, 25 SAY m.numgi
@ 1, 65 SAY m.fecgi
@ 2, 22 SAY m.tipdoc
@ 3, 22 SAY m.numref
@ 3, 65 SAY m.fecref
@ 4, 22 SAY val_prv(m.codprv)
@ 5, 22 SAY val_codcad(m.codcad, ;
  m.periodo,'V',22,30)
@ 6, 22 SAY val_para(m.codfte, ;
  'CODFTE','V',22,30)
@ 7, 22 SAY LEFT(m.destino, 55)
@ 8, 22 SAY LEFT(m.observa, 55)
@ 9, 22 SAY m.totgi
@ 10, 22 SAY m.grbigv
DO vista_hijo
IF  .NOT. vflag $ 'J*'
     DO subopc
ENDIF
RETURN
*
PROCEDURE vista_hijo
HIDE POPUP ALL
SELECT itegi
GOTO TOP
SEEK m.periodo + m.numgi
IF FOUND()
     BROWSE NOOPTIMIZE FIELDS  ;
            item :H = 'ITEM',  ;
            codart :H = 'C¢digo',  ;
            desart :H =  ;
            'Descripci¢n',  ;
            cantidad :H =  ;
            'Cantidad', fraccion  ;
            :H = 'Fracci¢n',  ;
            valuni :H =  ;
            'Val. Unit.', valcom  ;
            :H = 'Valor Compra'  ;
            NOMENU NOAPPEND  ;
            NODELETE NOCLEAR  ;
            WINDOW wind_1 KEY  ;
            m.periodo + m.numgi  ;
            TIMEOUT 0.0001   ;
            NOREFRESH
ELSE
     ACTIVATE WINDOW wind_1
     CLEAR
     @ 4, 25 SAY  ;
       'No hay Detalles de este Inventario'
     ACTIVATE WINDOW wind_0
ENDIF
SELECT guiint
RETURN
*
PROCEDURE vista_det
SELECT itegi
vtempo = '[ESC] Terminar'
ON KEY LABEL F9
HIDE POPUP ALL
GOTO TOP
SEEK m.periodo + m.numgi
IF FOUND()
     BROWSE NOOPTIMIZE FIELDS  ;
            item :H = 'ITEM',  ;
            codart :H = 'C¢digo',  ;
            desart :H =  ;
            'Descripci¢n',  ;
            cantidad :H =  ;
            'Cantidad', fraccion  ;
            :H = 'Fracci¢n',  ;
            valuni :H =  ;
            'Val.Unit.', valcom  ;
            :H = 'Val.Compra'  ;
            NOMENU NOAPPEND  ;
            NOEDIT NODELETE  ;
            NOCLEAR WINDOW wind_1  ;
            KEY m.periodo +  ;
            m.numgi TITLE vtempo  ;
            NOREFRESH
ELSE
     ACTIVATE WINDOW wind_1
     CLEAR
     @ 4, 25 SAY  ;
       'No hay Detalles de este Ingreso'
ENDIF
ON KEY LABEL F9 DO VISTA_DET
SHOW MENU mmenu
SELECT guiint
DO vista
RETURN
*
PROCEDURE revis
SELECT guiint
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
vtemp = RECNO()
HIDE MENU mmenu
ACTIVATE SCREEN
vtempo = '°°°°°°°°°°°Presione ®F10¯ para seleccionar  o  ®Esc¯ para cancelar°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
SET RELATION TO periodo + numgi INTO itegi
SET SKIP TO itegi
vtemp = RECNO()
HIDE MENU mmenu
ACTIVATE SCREEN
ON KEY LABEL f10 KEYBOARD CHR(23)
BROWSE FIELDS periodo :H =  ;
       'Periodo', numgi :H =  ;
       'G/I', itegi.item :H =  ;
       'ITEM', itegi.codart :H =  ;
       'C¢digo', itegi.desart :H =  ;
       'Descripci¢n',  ;
       itegi.cantidad :H =  ;
       'Cantidad', itegi.fraccion  ;
       :H = 'Fracci¢n',  ;
       itegi.valuni :H =  ;
       'Val.Uni.', itegi.valcom  ;
       :H = 'Val.Compra' NOMENU  ;
       NOAPPEND NOEDIT NODELETE  ;
       WINDOW wind_2
vtempo = '°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
IF LASTKEY() = 27
     GOTO vtemp
ENDIF
SHOW MENU mmenu
ON KEY LABEL f10
SELECT guiint
SET RELATION TO
DO vista
RETURN
*
PROCEDURE busca
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
vtemp = RECNO()
vperiodo = RIGHT(DTOC(m.fecsis),  ;
           2)
vnum_gi = '    '
ACTIVATE WINDOW standby
@ 1, 01 SAY  ;
  'Ingrese N£mero G/I : ' GET  ;
  vperiodo PICTURE '!!'
@ 1, 26 SAY '-' GET vnum_gi  ;
  PICTURE '!!!!' VALID vbusca()
READ
DEACTIVATE WINDOW standby
IF EMPTY(vnum_gi) .OR. LASTKEY() =  ;
   27
     RETURN
ELSE
     SEEK vperiodo + vnum_gi
     IF  .NOT. FOUND()
          DO standby WITH vmens04
          GOTO vtemp
     ELSE
          DO vista
     ENDIF
ENDIF
RETURN
*
FUNCTION vbusca
vnum_gi = PADL(ALLTRIM(vnum_gi),  ;
          4, '0')
RETURN .T.
*
PROCEDURE anter
SELECT guiint
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
IF  .NOT. BOF()
     SKIP -1
ENDIF
IF BOF()
     GOTO TOP
     DO standby WITH vmens05
ELSE
     DO vista
ENDIF
RETURN
*
PROCEDURE proxi
SELECT guiint
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
IF  .NOT. EOF()
     SKIP
ENDIF
IF EOF()
     DO standby WITH vmens06
     GOTO BOTTOM
ELSE
     DO vista
ENDIF
RETURN
*
PROCEDURE corri
IF EOF()
     DO standby WITH vmens08
     RETURN
ENDIF
SELECT kardex
GOTO TOP
IF estado = '20'
     DO standby WITH  ;
        'El Periodo ya esta Cerrado no se pueden hacer modificaciones'
     SELECT ordcom
     DO vista
     RETURN
ENDIF
SELECT guiint
SCATTER MEMVAR
DO pantalla
@ 0, 68 GET m.estado DISABLE
@ 1, 22 GET m.periodo DISABLE
@ 1, 25 GET m.numgi DISABLE
@ 1, 65 GET m.fecgi
@ 2, 22 GET m.tipdoc VALID  ;
  val_para(m.tipdoc,'TIPDOC',' ', ;
  22,20)
@ 3, 22 GET m.numref
@ 3, 65 GET m.fecref
@ 4, 22 GET m.codprv VALID  ;
  val_prv(m.codprv,.T.,04,27)
@ 5, 22 GET m.codcad VALID  ;
  val_codcad(m.codcad,m.periodo, ;
  ' ',22,30)
@ 6, 22 GET m.codfte VALID  ;
  val_para(m.codfte,'CODFTE',' ', ;
  22,30)
@ 7, 22 GET m.destino FUNCTION  ;
  'S50'
@ 8, 22 GET m.observa FUNCTION  ;
  'S50'
@ 9, 22 GET m.totgi WHEN .F.
@ 10, 22 GET m.grbigv DEFAULT 'S'  ;
  FUNCTION 'M S,N'
READ VALID val_read()
IF LASTKEY() <> 27
     ok = trabaja_hi()
     IF ok .AND. LASTKEY() <> 27
          SELECT guiint
          IF f_lock(1)
               m.tuser = 'C'
               m.usercr = vuser_id
               m.dusercr = DATE()
               m.husercr = TIME()
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH  ;
        'Proceso cancelado'
ENDIF
UNLOCK ALL
SELECT guiint
DO vista
RETURN
*
PROCEDURE ingre
SELECT stkalmv
GOTO TOP
IF EOF()
     DO standby WITH  ;
        'No existe Inventario Inicial en el sistema. por favor revise'
     SELECT guiint
     DO vista
     RETURN
ENDIF
SELECT kardex
GOTO TOP
IF estado = '20'
     DO standby WITH  ;
        'El Periodo ya esta Cerrado no se pueden hacer modificaciones'
     SELECT ordcom
     DO vista
     RETURN
ENDIF
ON KEY LABEL F9
SELECT guiint
nreg = IIF( .NOT. EOF(), RECNO(), - ;
       1)
DO pantalla
SCATTER BLANK MEMVAR
m.estado = '00'
m.periodo = RIGHT(STR(YEAR(m.fecsis),  ;
            4), 2)
m.fecgi = m.fecsis
m.fecref = m.fecsis
SELECT parma
SEEK 'CORRELGUIINT'
IF FOUND()
     m.numgi = PADL(ALLTRIM(STR(nument +  ;
               1)), 4, '0')
     IF SEEK(m.periodo + m.numgi,  ;
        'GUIINT')
          DO standby WITH  ;
             'El Correlativo Generado ya Existe.'
          SELECT guiint
          DO vista
          RETURN
     ENDIF
ELSE
     DO standby WITH  ;
        'El Parametro de Correlativos no existe. por favor consulte al area de Sistemas'
     DO vista
     RETURN
ENDIF
SELECT guiint
@ 0, 68 GET m.estado DISABLE
@ 1, 22 GET m.periodo DISABLE
@ 1, 25 GET m.numgi DISABLE
@ 1, 65 GET m.fecgi
@ 2, 22 GET m.tipdoc VALID  ;
  val_para(m.tipdoc,'TIPDOC',' ', ;
  22,20)
@ 3, 22 GET m.numref
@ 3, 65 GET m.fecref
@ 4, 22 GET m.codprv VALID  ;
  val_prv(m.codprv,.T.,04,27)
@ 5, 22 GET m.codcad VALID  ;
  val_codcad(m.codcad,m.periodo, ;
  ' ',22,30)
@ 6, 22 GET m.codfte VALID  ;
  val_para(m.codfte,'CODFTE',' ', ;
  22,30)
@ 7, 22 GET m.destino FUNCTION  ;
  'S50'
@ 8, 22 GET m.observa FUNCTION  ;
  'S50'
@ 9, 22 GET m.totgi WHEN .F.
@ 10, 22 GET m.grbigv DEFAULT 'S'  ;
  FUNCTION 'M S,N'
READ VALID val_read()
IF LASTKEY() <> 27
     ok = trabaja_hi()
     IF ok .AND. LASTKEY() <> 27
          SELECT guiint
          IF f_appd()
               m.tuser = 'I'
               m.user = vuser_id
               m.duser = DATE()
               m.huser = TIME()
               GATHER MEMVAR
               SELECT parma
               SEEK 'CORRELGUIINT'
               IF FOUND()
                    IF f_lock(1)
                         REPLACE nument  ;
                                 WITH  ;
                                 nument +  ;
                                 1
                    ENDIF
               ENDIF
          ENDIF
     ELSE
          IF nreg <> -1
               GOTO nreg
          ENDIF
          SELECT itegi
          IF SEEK(m.periodo +  ;
             m.numgi)
               DELETE WHILE  ;
                      periodo =  ;
                      m.periodo  ;
                      .AND. numgi =  ;
                      m.numgi
          ENDIF
          SELECT kardex
          SET ORDER TO KardexV2
          DO WHILE SEEK(m.periodo+ ;
             'G/I'+m.numgi)
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DELETE NEXT 1
               DO recalcula WITH  ;
                  cperiodo,  ;
                  ctipkar,  ;
                  ccodart,  ;
                  ccorrel
          ENDDO
          SET ORDER TO KardexV1
          DO standby WITH  ;
             'Proceso cancelado'
     ENDIF
ELSE
     IF nreg <> -1
          GOTO nreg
     ENDIF
     DO standby WITH  ;
        'Proceso cancelado'
ENDIF
UNLOCK ALL
SELECT guiint
DO vista
RETURN
*
FUNCTION trabaja_hi
*------------------
vsun = .T.
ACTIVATE SCREEN
HIDE MENU mmenu
vtempo = '°°°°°F2->Edita°°°°°°°°°F5->Agregar°°°°°°°°°F8->Eliminar°°°°°°°°F10->Terminar°°°°'
DO logos WITH rotulo1, vtempo
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_ite
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
SELECT itegi
SET ORDER TO iteGI1
SEEK m.periodo + m.numgi
IF  .NOT. FOUND()
     DO agrega_ite
ENDIF
BROWSE NOOPTIMIZE FIELDS item :H =  ;
       'Item', codart :H =  ;
       'Codigo', desart :H =  ;
       'Descripci¢n', lote :H =  ;
       'Lt.', unidad :H =  ;
       'Unidad', unifrac :H =  ;
       'U.fracc.', cantidad :H =  ;
       'Cantidad', fraccion :H =  ;
       'Fraccion', preuni :H =  ;
       'P.U.', valuni :H =  ;
       'Val.U.', valunifr :H =  ;
       'Val.U.Frc.', valcom :H =  ;
       'Valor Compra', precom :H =  ;
       'Precio Compra' NOMENU  ;
       NOAPPEND NOEDIT NODELETE  ;
       NOCLEAR WINDOW wind_1 KEY  ;
       m.periodo + m.numgi WHEN  ;
       .F.
m.totgi = 0
SEEK m.periodo + m.numgi
IF FOUND()
     SCAN WHILE periodo + numgi =  ;
          m.periodo + m.numgi
          m.totgi = m.totgi +  ;
                    valcom
     ENDSCAN
ENDIF
IF LASTKEY() <> 27
     vsun = .T.
ELSE
     vsun = .F.
ENDIF
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
ACTIVATE SCREEN
SHOW MENU mmenu
vtempo = '°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°'
DO logos WITH rotulo1, vtempo
SELECT guiint
RETURN vsun
*
PROCEDURE agrega_ite
*-------------------
PRIVATE m.tuser, m.user, m.huser, m.duser
lcant = .F.
lfrac = .F.
DEFINE WINDOW wind_3 FROM 04, 00 TO 23, 75 TITLE 'Adici¢n de Articulos' DOUBLE COLOR SCHEME 10
ACTIVATE WINDOW wind_3
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
SELECT itegi
IF SEEK(m.periodo + m.numgi)
     SCAN WHILE periodo + numgi = m.periodo + m.numgi
          m.item = item
     ENDSCAN
     m.item = PADL(ALLTRIM(STR(VAL(m.item) + 1)), 4, '0')
ELSE
     m.item = '0001'
ENDIF
m.tipkar = '1'
m.codart = SPACE(15)
m.desart = SPACE(60)
m.menudeo = SPACE(1)
m.unidad = SPACE(10)
m.unifrac = SPACE(10)
m.cantidad = 0
m.fraccion = 0
m.totcan = 0
m.preuni = 0
m.igv = 0
m.valuni = 0
m.valunifr = 0
m.valcom = 0
m.precom = 0
m.tuser = 'I'
m.user = vuser_id
m.huser = TIME()
m.duser = DATE()
@ 0, 01 SAY '             Item: ' + m.item
@ 1, 01 SAY ' Num. Guia / Int.: ' + m.periodo + '.' + m.numgi
@ 2, 01 SAY '    Cod. Art¡culo:' GET m.codart VALID val_art(m.codart)		&& .AND. vcodlab()
@ 3, 1 SAY '            Grupo: '
@ 4, 01 SAY '   Desc. Art¡culo:' GET m.desart  FUNCTION 'S40'     WHEN .F.
@ 5, 01 SAY '         Menudeo?:' GET m.menudeo PICTURE '@M S,N, ' VALID val_lote(m.codart)
@ 6, 01 SAY '           Unidad:' GET m.unidad  WHEN .F.
@ 7, 01 SAY '  Unidad Fraccion:' GET m.unifrac WHEN .F.
@ 6, 35 SAY '         Cantidad:' GET m.cantidad PICTURE '99,999' VALID val_can() WHEN lcant
@ 7, 35 SAY '         Fraccion:' GET m.fraccion PICTURE '99,999.999' VALID val_can() WHEN lfrac
@ 8, 35 SAY '   Total Cantidad:' GET m.totcan PICTURE '99,999.999' WHEN .F.
@ 10, 01 SAY '    Precio Compra:' GET m.precom PICTURE '999,999.9999' VALID val_pu(m.codart)
@ 11, 01 SAY '  Precio Unitario:' GET m.preuni PICTURE '999,999.9999' WHEN .F.
@ 12, 01 SAY '          I.G.V. :' GET m.igv PICTURE '999,999.9999' WHEN .F.
@ 10, 35 SAY '     Valor Compra:' GET m.valcom PICTURE '999,999.9999' WHEN .F.
@ 11, 35 SAY '   Valor Unitario:' GET m.valuni PICTURE '999,999.9999' WHEN .F.
@ 12, 35 SAY '   Val.Uni.Fracc.:' GET m.valunifr PICTURE '999,999.9999' WHEN .F.
READ VALID val_read() .AND. valing()
IF LASTKEY() <> 27
     ak = actkar('G/I',m.numgi,m.fecgi)
     IF ak
          IF f_appd()
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH 'Cancela Informacion'
ENDIF
DEACTIVATE WINDOW wind_3
RELEASE WINDOW wind_3
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_item
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
RETURN
*
FUNCTION vcodlab
xlab = 'B' + LEFT(m.codart, 6)
= val_fun('ArtMae',xlab,'Descri', ;
  xlab,1,3,20,'Descri')
RETURN .T.
*
FUNCTION valing
PRIVATE mret
mret = .T.
IF LASTKEY() <> 27
     DO CASE
          CASE m.totcan = 0
               DO standby WITH  ;
                  'La cantidad Ingrasada no debe Ser 0'
               mret = .F.
          CASE m.precom = 0
               DO standby WITH  ;
                  'El Precio de compra Ingresado no debe Ser 0'
               mret = .F.
     ENDCASE
ENDIF
RETURN mret
*
PROCEDURE val_lote
*-----------------
PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     IF menudeo = 'S'
          IF m.menudeo = 'S'
               m.cantidad = 1
               lcant = .F.
               lfrac = .T.
          ELSE
               m.fraccion = fraccion
               lcant = .T.
               lfrac = .F.
          ENDIF
     ELSE
          IF m.menudeo = 'S'
               m.menudeo = 'N'
          ENDIF
          m.fraccion = fraccion
          lcant = .T.
          lfrac = .F.
     ENDIF
ELSE
     DO standby WITH 'Error en catalogo de Articulos'
ENDIF
SHOW GET m.cantidad
SHOW GET m.fraccion
SET ORDER TO (cord)
SELECT (cali)
RETURN




PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     IF lote = 'S'
          IF m.lote = 'S'
               m.cantidad = 1
               lcant = .F.
               lfrac = .T.
          ELSE
               m.fraccion = fraccion
               lcant = .T.
               lfrac = .F.
          ENDIF
     ELSE
          IF m.lote = 'S'
               m.lote = 'N'
          ENDIF
          m.fraccion = fraccion
          lcant = .T.
          lfrac = .F.
     ENDIF
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SHOW GET m.cantidad
SHOW GET m.fraccion
SET ORDER TO (cord)
SELECT (cali)
RETURN
PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     IF lote = 'S'
          IF m.lote = 'S'
               m.fraccion = fraccion
               lcant = .T.
               lfrac = .F.
          ELSE
               m.cantidad = 1
               lcant = .F.
               lfrac = .T.
          ENDIF
     ELSE
          IF m.lote = 'S'
               m.lote = 'N'
          ENDIF
          m.fraccion = 1
          lcant = .T.
          lfrac = .F.
     ENDIF
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SHOW GET m.cantidad
SHOW GET m.fraccion
SET ORDER TO (cord)
SELECT (cali)
RETURN
*
PROCEDURE val_igv
m.igv = IIF(m.grbigv = 'S',  ;
        ROUND(m.preuni - m.preuni /  ;
        1.18 , 4), 0)
m.valuni = ROUND(m.preuni - m.igv,  ;
           4)
SHOW GET m.valuni
SHOW GET m.igv
RETURN
m.valuni = ROUND(m.preuni - m.igv,  ;
           4)
SHOW GET m.valuni
SHOW GET m.igv
RETURN
*
PROCEDURE val_pu
PARAMETER cart
PRIVATE cali, cord
m.preuni = m.precom / m.totcan
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     m.preuni = m.preuni *  ;
                iteart.fraccion
     SHOW GET m.preuni
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SET ORDER TO (cord)
SELECT (cali)
DO val_igv
DO val_pre WITH cart
RETURN
*
PROCEDURE val_pre
PARAMETER cart
PRIVATE cali, cord
cali = ALIAS()
SELECT iteart
cord = ORDER()
SET ORDER TO IteArt1
IF SEEK('B' + cart)
     m.valunifr = m.valuni /  ;
                  iteart.fraccion
     m.valcom = m.valunifr *  ;
                m.totcan
     m.precom = (m.preuni /  ;
                iteart.fraccion) *  ;
                m.totcan
     SHOW GET m.valunifr
     SHOW GET m.valcom
     SHOW GET m.precom
ELSE
     DO standby WITH  ;
        'Error en catalogo de Articulos'
ENDIF
SET ORDER TO (cord)
SELECT (cali)
RETURN
*
PROCEDURE val_can
m.totcan = m.fraccion *  ;
           m.cantidad
SHOW GET m.totcan
RETURN
*
PROCEDURE edita_item
*-------------------
PRIVATE m.tuser, m.usercr, m.husercr, m.dusercr
lcant = .F.
lfrac = .F.
DEFINE WINDOW wind_3 FROM 04, 00 TO 23, 75 TITLE 'Edici¢n de Articulos' DOUBLE COLOR SCHEME 10
ACTIVATE WINDOW wind_3
ON KEY LABEL F2
ON KEY LABEL F5
ON KEY LABEL F8
ON KEY LABEL F10
SELECT itegi
SCATTER MEMVAR
m.tuser = 'C'
m.usercr = vuser_id
m.husercr = TIME()
m.dusercr = DATE()
@ 0, 01 SAY '             Item: ' + m.item
@ 1, 01 SAY ' Num. Guia / Int.:' + m.periodo + '.' + m.numgi
@ 2, 01 SAY '    Cod. Art¡culo:' GET m.codart WHEN .F.	&& vcodlab() .AND.
@ 3, 1 SAY '            Grupo: '
@ 4, 01 SAY '   Desc. Art¡culo:' GET m.desart FUNCTION 'S40' WHEN .F.
@ 5, 01 SAY '         Menudeo?:' GET m.menudeo PICTURE '@M S,N' VALID val_lote(m.codart)
@ 6, 01 SAY '           Unidad:' GET m.unidad WHEN .F.
@ 7, 01 SAY '  Unidad Fraccion:' GET m.unifrac WHEN .F.
@ 6, 35 SAY '         Cantidad:' GET m.cantidad PICTURE '99,999' VALID val_can() .AND. val_pre(m.codart) WHEN lcant
@ 7, 35 SAY '         Fraccion:' GET m.fraccion PICTURE '99,999.999' VALID val_can() .AND. val_pre(m.codart) WHEN lfrac
@ 8, 35 SAY '   Total Cantidad:' GET m.totcan PICTURE '99,999.999' WHEN .F.
@ 10, 01 SAY '    Precio Compra:' GET m.precom PICTURE '999,999.9999' WHEN .F.
@ 11, 01 SAY '  Precio Unitario:' GET m.preuni PICTURE '999,999.9999' WHEN .F.
@ 12, 01 SAY '          I.G.V. :' GET m.igv PICTURE '999,999.9999' WHEN .F.
@ 10, 35 SAY '     Valor Compra:' GET m.valcom PICTURE '999,999.9999' WHEN .F.
@ 11, 35 SAY '   Valor Unitario:' GET m.valuni PICTURE '999,999.9999' WHEN .F.
@ 12, 35 SAY '  Val.Unit.Fracc.:' GET m.valunifr PICTURE '999,999.9999' WHEN .F.
READ VALID val_read()
IF LASTKEY() <> 27
     ak = actkar('G/I',numgi,m.fecgi)
     IF ak
          IF f_lock(1)
               GATHER MEMVAR
          ENDIF
     ENDIF
ELSE
     DO standby WITH 'Cancela Informacion'
ENDIF
DEACTIVATE WINDOW wind_3
RELEASE WINDOW wind_3
ON KEY LABEL F2 DO Edita_item
ON KEY LABEL F5 DO agrega_item
ON KEY LABEL F8 DO elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
RETURN
*
FUNCTION elimi_item
SELECT guiint
IF yesno('Estas seguro de Eliminar este Item')
     SELECT kardex
     SET ORDER TO KardexV2
     IF SEEK(itegi.periodo + 'G/I' + itegi.numgi + itegi.item + itegi.codart)
          IF RLOCK()
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DELETE NEXT 1
               DO recalcula WITH cperiodo, ctipkar, ccodart,  ;
                  ccorrel
          ENDIF
     ENDIF
     SELECT itegi
     IF RLOCK()
          DELETE NEXT 1
     ELSE
          DO standby WITH  ;
             'No puede eliminar este Item.'
     ENDIF
ENDIF
UNLOCK
RETURN

PARAMETER xcod
PRIVATE cord
ON KEY LABEL F5
ON KEY LABEL F8
malias = ALIAS()
v_fun = .F.
v_ent = .F.
SELECT iteart
GOTO TOP
cord = ORDER()
SET ORDER TO IteArt1
IF  .NOT. EMPTY('B' + xcod)
     SEEK 'B' + xcod
     v_fun = IIF(FOUND(), desart,  ;
             '')
     v_ent = FOUND()
ENDIF
IF EMPTY(xcod) .OR.  .NOT. v_ent
     SET ORDER TO IteArt2
     GOTO TOP
     ACTIVATE SCREEN
     ON KEY LABEL F10 KEYBOARD CHR(23)
     ON KEY LABEL F2 DO FunBusDet
     ON KEY LABEL F5 DO Agr_Art
     ON KEY LABEL F8
     DEFINE WINDOW _busart FROM 2,  ;
            01 TO 22, 78
     ACTIVATE WINDOW _busart
     BROWSE FIELDS codart :H =  ;
            'C¢digo', descri :H =  ;
            'Nombre' : 60, unidad  ;
            :H = 'Unidad' : 7,  ;
            unifrac :H =  ;
            'U.Fracc.', fraccion  ;
            :H = 'Fraccion'  ;
            NOMENU NOAPPEND  ;
            NOEDIT NODELETE  ;
            WINDOW _busart TITLE  ;
            '²²²² [F10] Selecciona   [F2] Buscar ²²²²   [F5] Agrega Art. ²²²²'  ;
            NOLGRID
     ON KEY LABEL F10
     ON KEY LABEL F2
     ON KEY LABEL F5
     DEACTIVATE WINDOW _busart
     RELEASE WINDOW _busart
     IF LASTKEY() = 27
          v_fun = .F.
          v_ent = .F.
     ELSE
          xcod = codart
          m.desart = descri
          m.unidad = unidad
          m.unifrac = unifrac
          m.lote = lote
          m.fraccion = fraccion
          SHOW GETS
          v_fun = .T.
          v_ent = .T.
     ENDIF
ENDIF
SET ORDER TO cOrd
ON KEY LABEL F5 DO Agrega_item
ON KEY LABEL F8 DO Elimi_item
ON KEY LABEL F10 KEYBOARD CHR(23)
UNLOCK ALL
SELECT (malias)
IF  .NOT. v_ent
     RETURN v_fun
ELSE
     RETURN v_ent
ENDIF
RETURN
*
PROCEDURE anula
PRIVATE nreg, lanula
lanula = .F.
IF yesno( ;
   'Esta seguro de Anular este Documento' ;
   )
     lanula = .T.
ENDIF
IF lanula
     DO CASE
          CASE estado = '99'
               DO standby WITH  ;
                  'El Docuemnto ya esta Anulado'
               lanula = .F.
          OTHERWISE
               lanula = .T.
     ENDCASE
ENDIF
IF lanula
     SELECT itegi
     IF SEEK(m.periodo + m.numgi)
          SCAN WHILE periodo +  ;
               numgi = m.periodo +  ;
               m.numgi
               REPLACE estado  ;
                       WITH '99'
          ENDSCAN
     ENDIF
     SELECT kardex
     SET ORDER TO KardexV2
     IF SEEK(m.periodo + 'G/I' +  ;
        m.numgi)
          SCAN WHILE periodo +  ;
               tipdoc + numdoc =  ;
               m.periodo + 'G/I' +  ;
               m.numgi
               REPLACE estado  ;
                       WITH '99'
               nreg = RECNO()
               cperiodo = periodo
               ctipkar = tipkar
               ccodart = codart
               ccorrel = correl
               DO recalcula WITH  ;
                  cperiodo,  ;
                  ctipkar,  ;
                  ccodart,  ;
                  ccorrel
               GOTO nreg
          ENDSCAN
     ENDIF
     SET ORDER TO KardexV1
     SELECT guiint
     IF SEEK(m.periodo + m.numgi)
          REPLACE estado WITH  ;
                  '99'
     ENDIF
ENDIF
SELECT guiint
DO vista
RETURN
*
PROCEDURE lista
DO standby WITH  ;
   'Opci¢n todavia en proceso. Crear reporte si es necesario'
RETURN
SELECT guiint
SCATTER MEMVAR
vdbf = SYS(3) + '.Dbf'
COPY TO (vdbf) STRUCTURE
USE IN 0 (vdbf) ALIAS xgui
SELECT xgui
APPEND BLANK
GATHER MEMVAR
SET RELATION TO periodo + numgi INTO itegi;
ADDITIVE
SET SKIP TO itegi
SET STEP ON
DO reporte WITH 2, 'GuiInt',  ;
   'Guia de Internamiento', 2,  ;
   .F., .T.
USE IN xgui
ERASE (vdbf)
SELECT guiint
RETURN
*
PROCEDURE termi
ven_accion = .F.
DEACTIVATE MENU
RETURN
*
PROCEDURE fin_opcion
CLOSE DATABASES
ON KEY LABEL F7
RELEASE WINDOW wind_0
RELEASE WINDOW wind_1
RELEASE WINDOW wind_2
RELEASE MENU mmenu
RESTORE SCREEN FROM principal
RETURN
*
FUNCTION val_est
PRIVATE mret
DO CASE
     CASE m.estado = '00'
          mret = 'Emitido  '
     CASE m.estado = '99'
          mret = 'Anulado  '
ENDCASE
RETURN mret
*
PROCEDURE subopc
PRIVATE calias
calias = ALIAS()
USE IN 0 IteUsuOp ORDER IteUsuOp2
SET SKIP OF PAD revis OF mmenu;
 .NOT. SEEK(vusucla + '0017', 'IteUsuOp')
SET SKIP OF PAD busca OF mmenu;
 .NOT. SEEK(vusucla + '0018', 'IteUsuOp')
SET SKIP OF PAD anter OF mmenu;
 .NOT. SEEK(vusucla + '0019', 'IteUsuOp')
SET SKIP OF PAD proxi OF mmenu;
 .NOT. SEEK(vusucla + '0020', 'IteUsuOp')
SET SKIP OF PAD corri OF mmenu;
 .NOT. SEEK(vusucla + '0021', 'IteUsuOp')
SET SKIP OF PAD ingre OF mmenu;
 .NOT. SEEK(vusucla + '0022', 'IteUsuOp')
SET SKIP OF PAD anula OF mmenu;
 .NOT. SEEK(vusucla + '0023', 'IteUsuOp')
SET SKIP OF PAD lista OF mmenu;
 .NOT. SEEK(vusucla + '0024', 'IteUsuOp')
USE IN iteusuop
SELECT (calias)
RETURN
*
